 // alert messages :: 
  var nxt = 0;
  function togglediv(divid,anchorid)
  {
    $('#moredetails').toggle('slow');
    if(nxt  == 0){
    $("#"+anchorid).html('Hide Details');
    nxt ++;
  }
  else{
     $("#"+anchorid).html('Show Details ');
nxt --;
  }
  }
  var alertmsg1 = function(msg){
    $(".alert").fadeOut('slow');
    $(".alert").fadeIn('slow');$(".alert").html(msg);
    scrollers1();
   
    }
    var alertmsgs1 = function(){
        $(".alert").fadeOut('slow');
    }

    
     //scroll to top :: 
     var scrollers1 = function(){
    $('html, body').animate({scrollTop : 0},800);
     }

//reason given
 receipt_ans = {};
function reason(reason,receiptid){
 
 if(reason == 0){
   delete receipt_ans[receiptid];
 
}else
{
 receipt_ans[receiptid] = reason;
}
  

  console.log(receipt_ans);

}

function updatelist(st){
  
 // if(st <= 0) return false;
  var bidi = $("#bidi").val();
  var url = baseurl()+"receipts/filterbids/"+st+"/"+bidi;
  // alert(url); return false;
  $("#unbidderlist").html("proccessing ...");
$.ajax({
        type: "POST",
        url:  url,        
        success: function(data, textStatus, jqXHR){ 
          console.log(data);
         $("#unbidderlist").html(data);        
             
        },
        error:function(data , textStatus, jqXHR)
        {           
            alert(data);
        }
    });


}
approved ="Y";
function appved(st)
{
  approved = st;
}

$(function(){


//bid receipt information
$( "#evaluatebeb" ).submit(function(e) {
    e.preventDefault();
       var form = this;
        var formid = form.id;
        var datatype = $("#"+formid).attr('data-type');
         //action url to commit your data
        var dataaction =   $("#"+formid).attr('data-action');
        // alert(dataaction);
        // return false;
        var dataelements =   $("#"+formid).attr('data-elements');
        console.log(dataelements);
       // alert(dataelements);
          //server side checks ::-- 
         var serversidecheckss =  $("#"+formid).attr('data-cheks');
         //the url where you are going to use for server side checks on data
         var datacheckaction =  $("#"+formid).attr('data-check-action');

         url = dataaction;
         console.log(dataelements);
     // alert(dataelements); 
     // return false;
   

           if(dataelements.length > 0)
            {
                var fieldNameArr=dataelements.split("<>");
            }
            else
            {
                fieldNameArr = Array();
            }

             var elementfield  ='';
             var formdata = {};
             var commitcheckdata = {};

             if((dataelements!= ' ') &&(dataelements.length > 0))
            {
                for(var i=0;i<fieldNameArr.length;i++)
                 {
                    //CHECK TO SEE IF ELEMEMENTS ARE REQUIRED 
                     var lke = fieldNameArr[i].split("*");
                      elementfield = lke[1];
                      formvalue = $("#"+elementfield).val();
                         if(fieldNameArr[i].charAt(0)=="*"){
                          if(formvalue.length <= 0)
                          {
                          alertmsg('Fill Blanks'); return false;
                          }   
                      }
                
                        else
                        {
                            elementfield = fieldNameArr[i];
                            formvalue = $("#"+elementfield).val();             
                        }
               
                   var datatype =  $("#"+elementfield).attr('datatype');
                 

                    switch(datatype)
                    {
                      case 'numeric':
                      var t = $.isNumeric(formvalue);   
                      if(t == true)
                      {

                      }
                      else
                      {
                        alertmsg('Enter Digits'); return false;
                  
                      }
                      break;
                        case 'text':
                        break;
                        case 'tel':
                       
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                       
                         
                        }                       
                        break;
                        case 'web':

                        if(formvalue.length > 0)
                        {
                        var valu = validateweb(formvalue);                        
                        if(valu == false)
                        {
                             alertmsg('Invalid Web Url '); return false;
                        }
                        
                        }
                        break;
                        case 'email': 

                        if(formvalue.length > 0)
                        {
                            var valu = validateemail(formvalue);
                            if(valu == false)
                            {
                                 
                                alertmsg('Ivalid Email Address'); return false;
                            }
                             
                            
                        }                       
                        break;
                        case 'phone':                         
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                                             
                        }   
                        break;
                        default:
                        break;
                    }

                    // ADDING ELEMETNTS TO THE FORM
                    formdata[elementfield] =formvalue; 
                     }
                     formdata['answered'] = receipt_ans;
                    console.log(formdata);
            }

            //send to server
alertmsg('Proccessing ... '); 
 
    $.ajax({
        type: "POST",
        url:  url,
        data: formdata,
        success: function(data, textStatus, jqXHR){ 

          if(data == 1)
          {
             alertmsg('Record Saved Succesfully'); 
             location.href=baseurl()+"bids/publish_bidder/active_procurements";
          }else
          {
         alertmsg(data); 
          console.log(data);
        }
             
        },
        error:function(data , textStatus, jqXHR)
        {
            console.log('Data Error'+data+textStatus+jqXHR);  
            alert(data);
        }
    });




});


//bid receipt information
$( "#bidreceipt" ).submit(function(e) {
    e.preventDefault();
       var form = this;
        var formid = form.id;
        var datatype = $("#"+formid).attr('data-type');
         //action url to commit your data
        var dataaction =   $("#"+formid).attr('data-action');
        // alert(dataaction);
        // return false;
        var dataelements =   $("#"+formid).attr('data-elements');
        console.log(dataelements);
       // alert(dataelements);
          //server side checks ::-- 
         var serversidecheckss =  $("#"+formid).attr('data-cheks');
         //the url where you are going to use for server side checks on data
         var datacheckaction =  $("#"+formid).attr('data-check-action');

         url = dataaction;
         console.log(dataelements);
     // alert(dataelements); 
     // return false;
   

           if(dataelements.length > 0)
            {
                var fieldNameArr=dataelements.split("<>");
            }
            else
            {
                fieldNameArr = Array();
            }

             var elementfield  ='';
             var formdata = {};
             var commitcheckdata = {};

             if((dataelements!= ' ') &&(dataelements.length > 0))
            {
                for(var i=0;i<fieldNameArr.length;i++)
                 {
                    //CHECK TO SEE IF ELEMEMENTS ARE REQUIRED 
                     var lke = fieldNameArr[i].split("*");
                      elementfield = lke[1];
                      formvalue = $("#"+elementfield).val();
                         if(fieldNameArr[i].charAt(0)=="*"){
                          if(formvalue.length <= 0)
                          {
                          alertmsg('Fill Blanks'); return false;
                          }   
                      }
                
                        else
                        {
                            elementfield = fieldNameArr[i];
                            formvalue = $("#"+elementfield).val();             
                        }
               
                   var datatype =  $("#"+elementfield).attr('datatype');
                 

                    switch(datatype)
                    {
                        case 'text':
                        break;
                        case 'tel':
                       
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                       
                         
                        }                       
                        break;
                        case 'web':

                        if(formvalue.length > 0)
                        {
                        var valu = validateweb(formvalue);                        
                        if(valu == false)
                        {
                             alertmsg('Invalid Web Url '); return false;
                        }
                        
                        }
                        break;
                        case 'email': 

                        if(formvalue.length > 0)
                        {
                            var valu = validateemail(formvalue);
                            if(valu == false)
                            {
                                 
                                alertmsg('Ivalid Email Address'); return false;
                            }
                             
                            
                        }                       
                        break;
                        case 'phone':                         
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                                             
                        }   
                        break;
                        default:
                        break;
                    }

                    // ADDING ELEMETNTS TO THE FORM
                    formdata[elementfield] =formvalue; 
                     }
                    console.log(formdata);
            }

console.log(url); 
//return false;
            //send to server
alertmsg('Proccessing ... '); 
 
    $.ajax({
        type: "POST",
        url:  url,
        data: formdata,
        success: function(data, textStatus, jqXHR){ 
          //alert(data);

          if(data == 1)
          {
            alertmsg('Record Saved Succesfully '); 
            location.href=baseurl()+"receipts/manage_receipts";

          }

          else{

            var dct = data.split(":");
           
            if(dct[0] == 3)
            {
              alertmsg(dct[1]); 
            }else
            alertmsg('Something Went Wrong Contact Site Administrator '); 
          }

            console.log(data);   return false;         
            
             
        },
        error:function(data , textStatus, jqXHR)
        {
            console.log('Data Error'+data+textStatus+jqXHR);  
            alert(data);
        }
    });




});
// end 

//working on tab select
$(".tabselction").on('click', function(event){
  
  var id = $(this).closest('li').attr('id');
  var dataurl =  baseurl()+$(this).closest('li').attr('dataurl');
  var datadiv =   $(this).closest('li').attr('datadiv');
   
 
  
  //get dataurl
  $("."+datadiv).html('Proccessing...');

  $.ajax({
                  type: "POST",
                  url:  dataurl,                   
                  success: function(data, textStatus, jqXHR){ 
                  console.log(data);                                       
                  $("."+datadiv).html(data); 
          
                  },
                  error:function(data , textStatus, jqXHR)
                  {
                      console.log('Data Error'+data+textStatus+jqXHR);  
                      alertmsg(data);
                  }
              });  


});

 
//handle submit events
$(".pdetypeform").on('submit', function(event){
   event.preventDefault();
	  mailesr(this);
   
});

//simple movervs
function mailesr(e){
cancelmsg();
 var form = e;
        var formid = form.id;
        var datatype = $("#"+formid).attr('data-type');
         //action url to commit your data
        var dataaction =   $("#"+formid).attr('data-action');
        // alert(dataaction);
        // return false;
        var dataelements =   $("#"+formid).attr('data-elements');
        console.log(dataelements);
       // alert(dataelements);
          //server side checks ::-- 
         var serversidecheckss =  $("#"+formid).attr('data-cheks');
         //the url where you are going to use for server side checks on data
         var datacheckaction =  $("#"+formid).attr('data-check-action');

             url = dataaction;

            if(dataelements.length > 0)
            {
                var fieldNameArr=dataelements.split("<>");
            }
            else
            {
                fieldNameArr = Array();
            }
             var elementfield  ='';
             var formdata = {};
             var commitcheckdata = {};

            if((dataelements!= ' ') &&(dataelements.length > 0))
            {
                //ITERATE THROUGH DATA ELEMENTS 
                 for(var i=0;i<fieldNameArr.length;i++)
                 {
                    //CHECK TO SEE IF ELEMEMENTS ARE REQUIRED 
                     var lke = fieldNameArr[i].split("*");
                      elementfield = lke[1];
                      formvalue = $("#"+elementfield).val();
                         if(fieldNameArr[i].charAt(0)=="*"){
                          if(formvalue.length <= 0)
                          {
                          alertmsg('Fill Blanks'); return false;
                          }   
                      }
                
                        else
                        {
                            elementfield = fieldNameArr[i];
                            formvalue = $("#"+elementfield).val();             
                        }
               
                   var datatype =  $("#"+elementfield).attr('datatype');
                 

                    switch(datatype)
                    {
                        case 'text':
                        break;
                        case 'tel':
                       
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                       
                         
                        }                       
                        break;
                        case 'web':

                        if(formvalue.length > 0)
                        {
                        var valu = validateweb(formvalue);                        
                        if(valu == false)
                        {
                             alertmsg('Invalid Web Url '); return false;
                        }
                        
                        }
                        break;
                        case 'email': 

                        if(formvalue.length > 0)
                        {
                            var valu = validateemail(formvalue);
                            if(valu == false)
                            {
                                 
                                alertmsg('Ivalid Email Address'); return false;
                            }
                             
                            
                        }                       
                        break;
                        case 'phone':                         
                        if(formvalue.length > 0)
                        {
                        var valu = validatephone(formvalue);
                        if(valu == false)
                        {
                            alertmsg('Invalid Phone, Digits are allowed, Not More than 10 digits'); return false;
                        }
                                             
                        }   
                        break;
                        default:
                        break;
                    }

                    // ADDING ELEMETNTS TO THE FORM
                    formdata[elementfield] =formvalue; 
                     }
                  console.log(formdata);
                     
           $.ajax({
                  type: "POST",
                  url:  url,
                  data: formdata,
                  success: function(data, textStatus, jqXHR){ 
                  console.log(data); 
                    
                      if(data == 1){
                      alertmsg("Record Saved Succesfully");
                      location.href = baseurl()+'admin/manage_pdetypes';
                      }
                      else{
                         alertmsg(data);
                      }
          
                  },
                  error:function(data , textStatus, jqXHR)
                  {
                      console.log('Data Error'+data+textStatus+jqXHR);  
                      alertmsg(data);
                  }
              });


    }

           
		}
//end 

//submit form to the server
var submitf2orm = function(formdata,url){
  
    $.ajax({
        type: "POST",
        url:  url,
        data: formdata,
        success: function(data, textStatus, jqXHR){  
//alert(data);
            return data;
            console.log(data+textStatus+jqXHR);  
        },
        error:function(data , textStatus, jqXHR)
        {
            console.log('Data Error'+data+textStatus+jqXHR);  
            console.log(data);
        }
    });
}
 var alertmsg = function(msg){
    $(".alert").fadeOut('slow');
    $(".alert").fadeIn('slow');$(".alert").html(msg);
    scrollers();
   
    }
    var cancelmsg = function(){
        $(".alert").fadeOut('slow');
    }

    
     //scroll to top :: 
     var scrollers = function(){
    $('html, body').animate({scrollTop : 0},800);
     }



// MANAGE DELETE RESORE AND UPDATE FUC
$('.savedelpdetype').on('click', function(){


    var decider = this.id;
    var idq =  decider.split('_');

     switch(idq[0])
     {
        case 'savedelpdetype':
        url = baseurl()+'pdetypes/delpdetype_ajax/archive/'+idq[1];
        console.log(url);

        var b = confirm('You Are About to Delete a Record')
        if(b == true){
         var rslt = ajx_delete(url,decider);
        }
        break;
        case 'restore':
        url = baseurl()+'pdetypes/delpdetype_ajax/restore/'+idq[1];
        console.log(url);
        var b = confirm('You Are About to Restore a Record')
        if(b == true){           
         var rslt = ajx_delete(url,decider);
        }
        break;
        case 'del':
        url = baseurl()+'pdetypes/delpdetype_ajax/delete/'+idq[1];
        console.log(url);
        var b = confirm('You Are About to Paramanently Delete a Record')
        if(b == true){           
         var rslt = ajx_delete(url,decider);
        }
        break;
        default:
         
        break;
     }
     
});
});

